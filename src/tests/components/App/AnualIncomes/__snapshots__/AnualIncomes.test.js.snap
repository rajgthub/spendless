// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing anual income fields should change amount value 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AnualIncomes
    changeIncome={[MockFunction]}
    incomes={
      Object {
        "amount": 45300,
        "frequency": "annual",
        "from_age": 30,
        "name": "Annual salary",
        "to_age": 67,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="form_group"
        >
          <label
            htmlFor=""
          >
            Anual salary
          </label>
          <input
            className="form_control"
            name="one"
            onChange={[Function]}
            type="text"
            value="£45300"
          />
        </div>,
        <div
          className="form_group"
        >
          <label
            htmlFor=""
          >
            From age
          </label>
          <input
            className="form_control"
            name="one"
            onChange={[Function]}
            type="text"
            value={30}
          />
        </div>,
        <div
          className="form_group"
        >
          <label
            htmlFor=""
          >
            To age
          </label>
          <input
            className="form_control"
            name="one"
            onChange={[Function]}
            type="text"
            value={67}
          />
        </div>,
      ],
      "className": "Anualincomes",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor=""
            >
              Anual salary
            </label>,
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value="£45300"
            />,
          ],
          "className": "form_group",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Anual salary",
              "htmlFor": "",
            },
            "ref": null,
            "rendered": "Anual salary",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form_control",
              "name": "one",
              "onChange": [Function],
              "type": "text",
              "value": "£45300",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor=""
            >
              From age
            </label>,
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value={30}
            />,
          ],
          "className": "form_group",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "From age",
              "htmlFor": "",
            },
            "ref": null,
            "rendered": "From age",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form_control",
              "name": "one",
              "onChange": [Function],
              "type": "text",
              "value": 30,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor=""
            >
              To age
            </label>,
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value={67}
            />,
          ],
          "className": "form_group",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "To age",
              "htmlFor": "",
            },
            "ref": null,
            "rendered": "To age",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form_control",
              "name": "one",
              "onChange": [Function],
              "type": "text",
              "value": 67,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="form_group"
          >
            <label
              htmlFor=""
            >
              Anual salary
            </label>
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value="£45300"
            />
          </div>,
          <div
            className="form_group"
          >
            <label
              htmlFor=""
            >
              From age
            </label>
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value={30}
            />
          </div>,
          <div
            className="form_group"
          >
            <label
              htmlFor=""
            >
              To age
            </label>
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value={67}
            />
          </div>,
        ],
        "className": "Anualincomes",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor=""
              >
                Anual salary
              </label>,
              <input
                className="form_control"
                name="one"
                onChange={[Function]}
                type="text"
                value="£45300"
              />,
            ],
            "className": "form_group",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Anual salary",
                "htmlFor": "",
              },
              "ref": null,
              "rendered": "Anual salary",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form_control",
                "name": "one",
                "onChange": [Function],
                "type": "text",
                "value": "£45300",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor=""
              >
                From age
              </label>,
              <input
                className="form_control"
                name="one"
                onChange={[Function]}
                type="text"
                value={30}
              />,
            ],
            "className": "form_group",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "From age",
                "htmlFor": "",
              },
              "ref": null,
              "rendered": "From age",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form_control",
                "name": "one",
                "onChange": [Function],
                "type": "text",
                "value": 30,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor=""
              >
                To age
              </label>,
              <input
                className="form_control"
                name="one"
                onChange={[Function]}
                type="text"
                value={67}
              />,
            ],
            "className": "form_group",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "To age",
                "htmlFor": "",
              },
              "ref": null,
              "rendered": "To age",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form_control",
                "name": "one",
                "onChange": [Function],
                "type": "text",
                "value": 67,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Testing anual income fields should change amount value 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AnualIncomes
    changeIncome={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "amount": 5000,
            },
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    incomes={
      Object {
        "amount": 45300,
        "frequency": "annual",
        "from_age": 30,
        "name": "Annual salary",
        "to_age": 67,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="form_group"
        >
          <label
            htmlFor=""
          >
            Anual salary
          </label>
          <input
            className="form_control"
            name="one"
            onChange={[Function]}
            type="text"
            value="£45300"
          />
        </div>,
        <div
          className="form_group"
        >
          <label
            htmlFor=""
          >
            From age
          </label>
          <input
            className="form_control"
            name="one"
            onChange={[Function]}
            type="text"
            value={30}
          />
        </div>,
        <div
          className="form_group"
        >
          <label
            htmlFor=""
          >
            To age
          </label>
          <input
            className="form_control"
            name="one"
            onChange={[Function]}
            type="text"
            value={67}
          />
        </div>,
      ],
      "className": "Anualincomes",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor=""
            >
              Anual salary
            </label>,
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value="£45300"
            />,
          ],
          "className": "form_group",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Anual salary",
              "htmlFor": "",
            },
            "ref": null,
            "rendered": "Anual salary",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form_control",
              "name": "one",
              "onChange": [Function],
              "type": "text",
              "value": "£45300",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor=""
            >
              From age
            </label>,
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value={30}
            />,
          ],
          "className": "form_group",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "From age",
              "htmlFor": "",
            },
            "ref": null,
            "rendered": "From age",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form_control",
              "name": "one",
              "onChange": [Function],
              "type": "text",
              "value": 30,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor=""
            >
              To age
            </label>,
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value={67}
            />,
          ],
          "className": "form_group",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "To age",
              "htmlFor": "",
            },
            "ref": null,
            "rendered": "To age",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form_control",
              "name": "one",
              "onChange": [Function],
              "type": "text",
              "value": 67,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="form_group"
          >
            <label
              htmlFor=""
            >
              Anual salary
            </label>
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value="£45300"
            />
          </div>,
          <div
            className="form_group"
          >
            <label
              htmlFor=""
            >
              From age
            </label>
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value={30}
            />
          </div>,
          <div
            className="form_group"
          >
            <label
              htmlFor=""
            >
              To age
            </label>
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value={67}
            />
          </div>,
        ],
        "className": "Anualincomes",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor=""
              >
                Anual salary
              </label>,
              <input
                className="form_control"
                name="one"
                onChange={[Function]}
                type="text"
                value="£45300"
              />,
            ],
            "className": "form_group",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Anual salary",
                "htmlFor": "",
              },
              "ref": null,
              "rendered": "Anual salary",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form_control",
                "name": "one",
                "onChange": [Function],
                "type": "text",
                "value": "£45300",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor=""
              >
                From age
              </label>,
              <input
                className="form_control"
                name="one"
                onChange={[Function]}
                type="text"
                value={30}
              />,
            ],
            "className": "form_group",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "From age",
                "htmlFor": "",
              },
              "ref": null,
              "rendered": "From age",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form_control",
                "name": "one",
                "onChange": [Function],
                "type": "text",
                "value": 30,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor=""
              >
                To age
              </label>,
              <input
                className="form_control"
                name="one"
                onChange={[Function]}
                type="text"
                value={67}
              />,
            ],
            "className": "form_group",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "To age",
                "htmlFor": "",
              },
              "ref": null,
              "rendered": "To age",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form_control",
                "name": "one",
                "onChange": [Function],
                "type": "text",
                "value": 67,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Testing anual income fields should change from_age value 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AnualIncomes
    changeIncome={[MockFunction]}
    incomes={
      Object {
        "amount": 45300,
        "frequency": "annual",
        "from_age": 30,
        "name": "Annual salary",
        "to_age": 67,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="form_group"
        >
          <label
            htmlFor=""
          >
            Anual salary
          </label>
          <input
            className="form_control"
            name="one"
            onChange={[Function]}
            type="text"
            value="£45300"
          />
        </div>,
        <div
          className="form_group"
        >
          <label
            htmlFor=""
          >
            From age
          </label>
          <input
            className="form_control"
            name="one"
            onChange={[Function]}
            type="text"
            value={30}
          />
        </div>,
        <div
          className="form_group"
        >
          <label
            htmlFor=""
          >
            To age
          </label>
          <input
            className="form_control"
            name="one"
            onChange={[Function]}
            type="text"
            value={67}
          />
        </div>,
      ],
      "className": "Anualincomes",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor=""
            >
              Anual salary
            </label>,
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value="£45300"
            />,
          ],
          "className": "form_group",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Anual salary",
              "htmlFor": "",
            },
            "ref": null,
            "rendered": "Anual salary",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form_control",
              "name": "one",
              "onChange": [Function],
              "type": "text",
              "value": "£45300",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor=""
            >
              From age
            </label>,
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value={30}
            />,
          ],
          "className": "form_group",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "From age",
              "htmlFor": "",
            },
            "ref": null,
            "rendered": "From age",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form_control",
              "name": "one",
              "onChange": [Function],
              "type": "text",
              "value": 30,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor=""
            >
              To age
            </label>,
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value={67}
            />,
          ],
          "className": "form_group",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "To age",
              "htmlFor": "",
            },
            "ref": null,
            "rendered": "To age",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form_control",
              "name": "one",
              "onChange": [Function],
              "type": "text",
              "value": 67,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="form_group"
          >
            <label
              htmlFor=""
            >
              Anual salary
            </label>
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value="£45300"
            />
          </div>,
          <div
            className="form_group"
          >
            <label
              htmlFor=""
            >
              From age
            </label>
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value={30}
            />
          </div>,
          <div
            className="form_group"
          >
            <label
              htmlFor=""
            >
              To age
            </label>
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value={67}
            />
          </div>,
        ],
        "className": "Anualincomes",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor=""
              >
                Anual salary
              </label>,
              <input
                className="form_control"
                name="one"
                onChange={[Function]}
                type="text"
                value="£45300"
              />,
            ],
            "className": "form_group",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Anual salary",
                "htmlFor": "",
              },
              "ref": null,
              "rendered": "Anual salary",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form_control",
                "name": "one",
                "onChange": [Function],
                "type": "text",
                "value": "£45300",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor=""
              >
                From age
              </label>,
              <input
                className="form_control"
                name="one"
                onChange={[Function]}
                type="text"
                value={30}
              />,
            ],
            "className": "form_group",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "From age",
                "htmlFor": "",
              },
              "ref": null,
              "rendered": "From age",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form_control",
                "name": "one",
                "onChange": [Function],
                "type": "text",
                "value": 30,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor=""
              >
                To age
              </label>,
              <input
                className="form_control"
                name="one"
                onChange={[Function]}
                type="text"
                value={67}
              />,
            ],
            "className": "form_group",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "To age",
                "htmlFor": "",
              },
              "ref": null,
              "rendered": "To age",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form_control",
                "name": "one",
                "onChange": [Function],
                "type": "text",
                "value": 67,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Testing anual income fields should change from_age value 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AnualIncomes
    changeIncome={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "from_age": 40,
            },
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    incomes={
      Object {
        "amount": 45300,
        "frequency": "annual",
        "from_age": 30,
        "name": "Annual salary",
        "to_age": 67,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="form_group"
        >
          <label
            htmlFor=""
          >
            Anual salary
          </label>
          <input
            className="form_control"
            name="one"
            onChange={[Function]}
            type="text"
            value="£45300"
          />
        </div>,
        <div
          className="form_group"
        >
          <label
            htmlFor=""
          >
            From age
          </label>
          <input
            className="form_control"
            name="one"
            onChange={[Function]}
            type="text"
            value={30}
          />
        </div>,
        <div
          className="form_group"
        >
          <label
            htmlFor=""
          >
            To age
          </label>
          <input
            className="form_control"
            name="one"
            onChange={[Function]}
            type="text"
            value={67}
          />
        </div>,
      ],
      "className": "Anualincomes",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor=""
            >
              Anual salary
            </label>,
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value="£45300"
            />,
          ],
          "className": "form_group",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Anual salary",
              "htmlFor": "",
            },
            "ref": null,
            "rendered": "Anual salary",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form_control",
              "name": "one",
              "onChange": [Function],
              "type": "text",
              "value": "£45300",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor=""
            >
              From age
            </label>,
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value={30}
            />,
          ],
          "className": "form_group",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "From age",
              "htmlFor": "",
            },
            "ref": null,
            "rendered": "From age",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form_control",
              "name": "one",
              "onChange": [Function],
              "type": "text",
              "value": 30,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor=""
            >
              To age
            </label>,
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value={67}
            />,
          ],
          "className": "form_group",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "To age",
              "htmlFor": "",
            },
            "ref": null,
            "rendered": "To age",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form_control",
              "name": "one",
              "onChange": [Function],
              "type": "text",
              "value": 67,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="form_group"
          >
            <label
              htmlFor=""
            >
              Anual salary
            </label>
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value="£45300"
            />
          </div>,
          <div
            className="form_group"
          >
            <label
              htmlFor=""
            >
              From age
            </label>
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value={30}
            />
          </div>,
          <div
            className="form_group"
          >
            <label
              htmlFor=""
            >
              To age
            </label>
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value={67}
            />
          </div>,
        ],
        "className": "Anualincomes",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor=""
              >
                Anual salary
              </label>,
              <input
                className="form_control"
                name="one"
                onChange={[Function]}
                type="text"
                value="£45300"
              />,
            ],
            "className": "form_group",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Anual salary",
                "htmlFor": "",
              },
              "ref": null,
              "rendered": "Anual salary",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form_control",
                "name": "one",
                "onChange": [Function],
                "type": "text",
                "value": "£45300",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor=""
              >
                From age
              </label>,
              <input
                className="form_control"
                name="one"
                onChange={[Function]}
                type="text"
                value={30}
              />,
            ],
            "className": "form_group",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "From age",
                "htmlFor": "",
              },
              "ref": null,
              "rendered": "From age",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form_control",
                "name": "one",
                "onChange": [Function],
                "type": "text",
                "value": 30,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor=""
              >
                To age
              </label>,
              <input
                className="form_control"
                name="one"
                onChange={[Function]}
                type="text"
                value={67}
              />,
            ],
            "className": "form_group",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "To age",
                "htmlFor": "",
              },
              "ref": null,
              "rendered": "To age",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form_control",
                "name": "one",
                "onChange": [Function],
                "type": "text",
                "value": 67,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Testing anual income fields should change to_age value 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AnualIncomes
    changeIncome={[MockFunction]}
    incomes={
      Object {
        "amount": 45300,
        "frequency": "annual",
        "from_age": 30,
        "name": "Annual salary",
        "to_age": 67,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="form_group"
        >
          <label
            htmlFor=""
          >
            Anual salary
          </label>
          <input
            className="form_control"
            name="one"
            onChange={[Function]}
            type="text"
            value="£45300"
          />
        </div>,
        <div
          className="form_group"
        >
          <label
            htmlFor=""
          >
            From age
          </label>
          <input
            className="form_control"
            name="one"
            onChange={[Function]}
            type="text"
            value={30}
          />
        </div>,
        <div
          className="form_group"
        >
          <label
            htmlFor=""
          >
            To age
          </label>
          <input
            className="form_control"
            name="one"
            onChange={[Function]}
            type="text"
            value={67}
          />
        </div>,
      ],
      "className": "Anualincomes",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor=""
            >
              Anual salary
            </label>,
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value="£45300"
            />,
          ],
          "className": "form_group",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Anual salary",
              "htmlFor": "",
            },
            "ref": null,
            "rendered": "Anual salary",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form_control",
              "name": "one",
              "onChange": [Function],
              "type": "text",
              "value": "£45300",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor=""
            >
              From age
            </label>,
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value={30}
            />,
          ],
          "className": "form_group",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "From age",
              "htmlFor": "",
            },
            "ref": null,
            "rendered": "From age",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form_control",
              "name": "one",
              "onChange": [Function],
              "type": "text",
              "value": 30,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor=""
            >
              To age
            </label>,
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value={67}
            />,
          ],
          "className": "form_group",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "To age",
              "htmlFor": "",
            },
            "ref": null,
            "rendered": "To age",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form_control",
              "name": "one",
              "onChange": [Function],
              "type": "text",
              "value": 67,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="form_group"
          >
            <label
              htmlFor=""
            >
              Anual salary
            </label>
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value="£45300"
            />
          </div>,
          <div
            className="form_group"
          >
            <label
              htmlFor=""
            >
              From age
            </label>
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value={30}
            />
          </div>,
          <div
            className="form_group"
          >
            <label
              htmlFor=""
            >
              To age
            </label>
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value={67}
            />
          </div>,
        ],
        "className": "Anualincomes",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor=""
              >
                Anual salary
              </label>,
              <input
                className="form_control"
                name="one"
                onChange={[Function]}
                type="text"
                value="£45300"
              />,
            ],
            "className": "form_group",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Anual salary",
                "htmlFor": "",
              },
              "ref": null,
              "rendered": "Anual salary",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form_control",
                "name": "one",
                "onChange": [Function],
                "type": "text",
                "value": "£45300",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor=""
              >
                From age
              </label>,
              <input
                className="form_control"
                name="one"
                onChange={[Function]}
                type="text"
                value={30}
              />,
            ],
            "className": "form_group",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "From age",
                "htmlFor": "",
              },
              "ref": null,
              "rendered": "From age",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form_control",
                "name": "one",
                "onChange": [Function],
                "type": "text",
                "value": 30,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor=""
              >
                To age
              </label>,
              <input
                className="form_control"
                name="one"
                onChange={[Function]}
                type="text"
                value={67}
              />,
            ],
            "className": "form_group",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "To age",
                "htmlFor": "",
              },
              "ref": null,
              "rendered": "To age",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form_control",
                "name": "one",
                "onChange": [Function],
                "type": "text",
                "value": 67,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Testing anual income fields should change to_age value 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AnualIncomes
    changeIncome={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "to_age": 60,
            },
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    incomes={
      Object {
        "amount": 45300,
        "frequency": "annual",
        "from_age": 30,
        "name": "Annual salary",
        "to_age": 67,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="form_group"
        >
          <label
            htmlFor=""
          >
            Anual salary
          </label>
          <input
            className="form_control"
            name="one"
            onChange={[Function]}
            type="text"
            value="£45300"
          />
        </div>,
        <div
          className="form_group"
        >
          <label
            htmlFor=""
          >
            From age
          </label>
          <input
            className="form_control"
            name="one"
            onChange={[Function]}
            type="text"
            value={30}
          />
        </div>,
        <div
          className="form_group"
        >
          <label
            htmlFor=""
          >
            To age
          </label>
          <input
            className="form_control"
            name="one"
            onChange={[Function]}
            type="text"
            value={67}
          />
        </div>,
      ],
      "className": "Anualincomes",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor=""
            >
              Anual salary
            </label>,
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value="£45300"
            />,
          ],
          "className": "form_group",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Anual salary",
              "htmlFor": "",
            },
            "ref": null,
            "rendered": "Anual salary",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form_control",
              "name": "one",
              "onChange": [Function],
              "type": "text",
              "value": "£45300",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor=""
            >
              From age
            </label>,
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value={30}
            />,
          ],
          "className": "form_group",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "From age",
              "htmlFor": "",
            },
            "ref": null,
            "rendered": "From age",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form_control",
              "name": "one",
              "onChange": [Function],
              "type": "text",
              "value": 30,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor=""
            >
              To age
            </label>,
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value={67}
            />,
          ],
          "className": "form_group",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "To age",
              "htmlFor": "",
            },
            "ref": null,
            "rendered": "To age",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form_control",
              "name": "one",
              "onChange": [Function],
              "type": "text",
              "value": 67,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="form_group"
          >
            <label
              htmlFor=""
            >
              Anual salary
            </label>
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value="£45300"
            />
          </div>,
          <div
            className="form_group"
          >
            <label
              htmlFor=""
            >
              From age
            </label>
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value={30}
            />
          </div>,
          <div
            className="form_group"
          >
            <label
              htmlFor=""
            >
              To age
            </label>
            <input
              className="form_control"
              name="one"
              onChange={[Function]}
              type="text"
              value={67}
            />
          </div>,
        ],
        "className": "Anualincomes",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor=""
              >
                Anual salary
              </label>,
              <input
                className="form_control"
                name="one"
                onChange={[Function]}
                type="text"
                value="£45300"
              />,
            ],
            "className": "form_group",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Anual salary",
                "htmlFor": "",
              },
              "ref": null,
              "rendered": "Anual salary",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form_control",
                "name": "one",
                "onChange": [Function],
                "type": "text",
                "value": "£45300",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor=""
              >
                From age
              </label>,
              <input
                className="form_control"
                name="one"
                onChange={[Function]}
                type="text"
                value={30}
              />,
            ],
            "className": "form_group",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "From age",
                "htmlFor": "",
              },
              "ref": null,
              "rendered": "From age",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form_control",
                "name": "one",
                "onChange": [Function],
                "type": "text",
                "value": 30,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor=""
              >
                To age
              </label>,
              <input
                className="form_control"
                name="one"
                onChange={[Function]}
                type="text"
                value={67}
              />,
            ],
            "className": "form_group",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "To age",
                "htmlFor": "",
              },
              "ref": null,
              "rendered": "To age",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form_control",
                "name": "one",
                "onChange": [Function],
                "type": "text",
                "value": 67,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
